I"ü-<p>R√°d ovl√°d√°m jak√©koli rychl√© kolo, kter√© m√° berany. Jezd√≠m u≈æ nƒõjakou dobu a √∫ƒçastnil jsem se nƒõkolika cyklokrosov√Ωch, silniƒçn√≠ch i dr√°hov√Ωch z√°vod≈Ø. Kolo mi p≈ôijde fakt super a tak si d√≠ky tomuto n√°stroji dok√°≈æi vydƒõlat obƒças i nƒõjak√Ω mƒõ≈°ec pln√Ω penƒõz. Jezd√≠m toti≈æ jako messenger po Praze a pr√°ce to je, ale prac√≠ to nenaz√Ωv√°m. Doj√≠≈ædim na kole po Praze tƒõmƒõ≈ô v≈ædy a v≈°ude. Obƒças nejenom po Praze, ale i po ƒåech√°ch.</p>

<p>Na Stravƒõ m√°m v≈°e:</p>

<p><a style="display:inline-block;background-color:#FC4C02;color:#fff;padding:5px 10px 5px 30px;font-size:11px;font-family:Helvetica, Arial, sans-serif;white-space:nowrap;text-decoration:none;background-repeat:no-repeat;background-position:10px center;border-radius:3px;background-image:url('http://badges.strava.com/logo-strava-echelon.png')" href="http://strava.com/athletes/21086949" target="_clean">
  Follow me on <b>STRAVA</b></a></p>

<h3> Heatmapa m√Ωch j√≠zd </h3>

<meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />

<script src="https://api.mapbox.com/mapbox.js/v3.2.1/mapbox.js"></script>

<link href="https://api.mapbox.com/mapbox.js/v3.2.1/mapbox.css" rel="stylesheet" />

<style>
   body { margin: 100; padding: 100; }
	#map { position: absolute ; top: 50; bottom: 50; height: 50%; width: 50%; }
</style>

<!--// map -->
<script src="https://api.mapbox.com/mapbox.js/plugins/leaflet-omnivore/v0.2.0/leaflet-omnivore.min.js"></script>

<div id="map"></div>

<script>
L.mapbox.accessToken = 'pk.eyJ1IjoibWFjZXNrYSIsImEiOiJjazVhMDFmbGgxMmxnM21wZ3BvNjJhdXMzIn0.OC2jBDlbR4AE1rhBzI__cQ';
var map = L.mapbox.map('map',"mapbox.dark")



var rideStyle = {
    "color": "#ff6600",
    "weight": 2,
    "opacity": .2,
}
customLayerRide = L.geoJson(null, {
    style: rideStyle
}).addTo(map);
    
    

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2017_4_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2017_5_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2017_6_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2017_7_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
    
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2017_8_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2017_9_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2017_10_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
    
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2017_11_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2017_12_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2018_1_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2018_2_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2018_3_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2018_4_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
    
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2018_5_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2018_6_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2018_7_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
    
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2018_8_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2018_9_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
    
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2018_10_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
    
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2018_11_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2018_12_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
  
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2019_1_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2019_2_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2019_3_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2019_4_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
    
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2019_5_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2019_6_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2019_7_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
    
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2019_8_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2019_9_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
    
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2019_10_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
    
var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2019_11_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);

var runLayer = omnivore.geojson('https://raw.githubusercontent.com/XMaceska/maceskad.me/master/GPX/2019_12_resized.json',null, customLayerRide)
    .on('ready', function() {
        map.fitBounds(runLayer.getBounds());
    })
    .addTo(map);
    
    
//<!--// data GPX -->   
//    for (var i = 1; i < 4; i++){
//            var runLayer = omnivore.gpx('GPX/' + i.toString() + ".gpx", null, customLayerRide)
//                .on('ready', function() {
//                    map.fitBounds(runLayer.getBounds());
//            })
//            .addTo(map);    
//        }
//var runLayer = omnivore.gpx("2.gpx",null,customLayerRide)
//    .addTo(map);
//var runLayer = omnivore.gpx("3.gpx",null,customLayerRide)
//    .addTo(map);

</script>

<h2>2019</h2>
<p>Rok 2019 byl super, zbo≈ôil jsem minim√°lnƒõ dva rekordy. Najel jsem celkovƒõ 16 292 km za rok a taky jsem odjel z Prahy do Berl√≠na za 19 a p≈Øl hodiny, ƒçim≈æ jsem si posunul svoj√≠ nejdel≈°√≠ j√≠zdu za jedin√Ω den na hodnotu 417km.</p>
<h3>Races</h3>
<ul class="listing">


  
  
    
    <li class="listing-seperator">2019</li>
  
    <a href="/cycl_cz/2019-08-10-Krusnoton%20XXXL_cz">
    <img src="/images/Krusnoton_resized.jpg" alt="Kru≈°noton XXXL" title="Kru≈°noton XXXL" /> <a href="/cycl_cz/2019-08-10-Krusnoton%20XXXL_cz">
  <li class="listing-item">
    <time datetime="post.date">2019-08-10</time>
    <a href="/cycl_cz/2019-08-10-Krusnoton%20XXXL_cz" title="Kru≈°noton XXXL">Kru≈°noton XXXL</a>
  </li>

  
  
    <a href="/cycl_cz/2019-05-30-Praha%20-%20Doksy,%20UAC%20races_cz">
    <img src="/images/Doksy_resized.jpg" alt="Praha - Doksy UAC silniƒçn√≠ z√°vod" title="Praha - Doksy UAC silniƒçn√≠ z√°vod" /> <a href="/cycl_cz/2019-05-30-Praha%20-%20Doksy,%20UAC%20races_cz">
  <li class="listing-item">
    <time datetime="post.date">2019-05-30</time>
    <a href="/cycl_cz/2019-05-30-Praha%20-%20Doksy,%20UAC%20races_cz" title="Praha - Doksy UAC silniƒçn√≠ z√°vod">Praha - Doksy UAC silniƒçn√≠ z√°vod</a>
  </li>


</a></a></a></a></ul>
:ET